version: 2.1

# Import required orbs
orbs:
  aws-cli: circleci/aws-cli@5.1.1
  terraform: circleci/terraform@3.3

# Define reusable commands
commands:
  assume-role-with-oidc:
    description: "Assume AWS role using OIDC"
    steps:
      - aws-cli/setup:
          role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/${AWS_FEDERATED_USER_ROLE}
          aws-region: ${AWS_REGION}

jobs:
  terraform-plan:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - assume-role-with-oidc
      - terraform/install:
          terraform_version: "1.5.0"
      - run:
          name: Initialize Terraform
          command: |
            cd terraform/vpc
            terraform init \
              -backend-config="bucket=${TF_STATE_BUCKET}" \
              -backend-config="region=${AWS_REGION}" \
              -backend-config="dynamodb_table=${TF_LOCK_TABLE}"
      - run:
          name: Terraform Plan
          command: |
            cd terraform/vpc
            terraform plan -out=tfplan
      - persist_to_workspace:
          root: .
          paths:
            - terraform/vpc/tfplan

  terraform-apply:
      docker:
        - image: cimg/aws:2024.03
      steps:
        - checkout
        - assume-role-with-oidc
        - terraform/install:
            terraform_version: "1.5.0"
        - attach_workspace:
            at: .
        - run:
            name: Apply Terraform Changes
            command: |
              cd terraform/vpc
              terraform init \
                -backend-config="bucket=${TF_STATE_BUCKET}" \
                -backend-config="region=${AWS_REGION}" \
                -backend-config="dynamodb_table=${TF_LOCK_TABLE}"
              terraform apply tfplan

workflows:
  run-vpc-workflow:
    jobs:
      - terraform-plan:
          context: aeb_secrets
          filters:
            branches:
              only:
                - main
                - dev
      - approve-apply:
          type: approval
          requires:
            - terraform-plan
          filters:
            branches:
              only:
                - main
      - terraform-apply:
          context: aeb_secrets
          requires:
            - approve-apply
          filters:
            branches:
              only:
                - main