version: 2.1

# Define reusable commands
commands:
  assume-role-with-oidc:
    description: "Assume AWS role using OIDC"
    steps:
      - aws-cli/setup:
          role-arn: ${AWS_ROLE_ARN}
          aws-region: ${AWS_REGION}

jobs:
  terraform-vpc-plan:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - assume-role-with-oidc
      - terraform/install:
          terraform_version: "1.5.0"
      - run:
          name: Initialize Terraform
          command: |
            cd terraform/vpc
            terraform init \
              -backend-config="bucket=${TF_STATE_BUCKET}" \
              -backend-config="region=${AWS_REGION}" \
              -backend-config="dynamodb_table=${TF_LOCK_TABLE}"
      - run:
          name: Plan VPC Infrastructure
          command: |
            cd terraform/vpc
            terraform plan \
              -var="aws_region=${AWS_REGION}" \
              -var="vpc_cidr=${VPC_CIDR}" \
              -var="environment=${ENVIRONMENT}" \
#              -var="project=${PROJECT_NAME}" \
#              -var="owner=${OWNER}" \
              -out=tfplan
      - persist_to_workspace:
          root: .
          paths:
            - terraform/vpc/tfplan

  terraform-vpc-apply:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - assume-role-with-oidc
      - terraform/install:
          terraform_version: "1.5.0"
      - attach_workspace:
          at: .
      - run:
          name: Apply VPC Infrastructure
          command: |
            cd terraform/vpc
            terraform apply tfplan

workflows:
  vpc-deployment:
    jobs:
      - terraform-vpc-plan:
          context:
            - aws-oidc-context
            - terraform-context
      - approve-vpc-apply:
          type: approval
          requires:
            - terraform-vpc-plan
      - terraform-vpc-apply:
          requires:
            - approve-vpc-apply
          context:
            - aws-oidc-context
            - terraform-context