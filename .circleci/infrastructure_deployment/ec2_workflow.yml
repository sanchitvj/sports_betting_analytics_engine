version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.5
  terraform: circleci/terraform@3.3

jobs:
  ec2_provision:
    docker:
      - image: cimg/aws:2024.03
    steps:
      - checkout
      - aws-cli/setup:
          role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/${OIDC_ROLE}
          aws-region: AWS_REGION
          profile-name: oidc-profile
      - terraform/install:
          terraform_version: "1.5.0"
      - run:
          name: Initialize EC2 Terraform
          command: |
            cd terraform/ec2
            terraform init \
              -backend-config="bucket=${TF_STATE_BUCKET}" \
              -backend-config="region=${AWS_REGION}" \
              -backend-config="dynamodb_table=${TF_LOCK_TABLE}"
      - run:
          name: Plan EC2 Changes
          command: |
            cd terraform/ec2
            terraform plan \
              -var="vpc_id=${KAFKA_VPC_ID}" \
              -var="subnet_id=${PUBLIC_SUBNET_1A}" \
              -var="key_pair_name=${OLD_KEY_PAIR}" \
              -var="instance_type=t3a.medium" \
              -var="iam_role_name=${EC2_IAM_ROLE}" \
              -var="vpc_id=${KAFKA_VPC_ID}" \
              -var="vpc_cidr=${VPC_CIDR}" \
              -var="allowed_cidr_blocks=0.0.0.0/0" \
              -out=tfplan
      - persist_to_workspace:
          root: .
          paths:
            - terraform/ec2/ec2_tfplan
      - run:
          name: Apply EC2 Changes
          command: |
            cd terraform/ec2
            export AWS_PROFILE=oidc-profile
            terraform apply -auto-approve ec2_tfplan

workflows:
  deploy_ec2:
    jobs:
      - ec2_provision:
          context: aeb_secrets
          filters:
            branches:
              only:
                -dev
                -main