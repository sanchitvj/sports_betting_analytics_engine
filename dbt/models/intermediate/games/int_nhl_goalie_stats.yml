{{ config(
    materialized='incremental',
    unique_key=['game_id', 'team_type'],
    schema='int_layer',
    incremental_strategy='merge',
    cluster_by=['partition_year', 'partition_month', 'partition_day']
) }}

with goalie_stats as (
    select
        game_id,
        partition_year,
        partition_month,
        partition_day,
        'HOME' as team_type,
        home_team_id,
        home_team_name,
        home_team_saves,
        home_team_save_pct,
        away_team_goals as goals_against,
        home_team_saves + away_team_goals as shots_faced,
        case
            when away_team_goals = 0 then 1
            else 0
        end as is_shutout,
        ingestion_timestamp
    from {{ ref('stg_nhl_games') }}

    union all

    select
        game_id,
        partition_year,
        partition_month,
        partition_day,
        'AWAY' as team_type,
        away_team_id,
        away_team_name,
        away_team_saves,
        away_team_save_pct,
        home_team_goals as goals_against,
        away_team_saves + home_team_goals as shots_faced,
        case
            when home_team_goals = 0 then 1
            else 0
        end as is_shutout,
        ingestion_timestamp
    from {{ ref('stg_nhl_games') }}
    {% if is_incremental() %}
    where ingestion_timestamp > (select max(ingestion_timestamp) from {{ this }})
    {% endif %}
)
select * from goalie_stats
