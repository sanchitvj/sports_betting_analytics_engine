version: 2

models:
  - name: mart_overtime_analysis
    description: Overtime analysis across all sports
    tests:
      - unique:
          column_name: "game_id || '-' || sport_type"
      - not_null:
          column_name: game_id
    columns:
      - name: sport_type
        tests:
          - not_null
          - accepted_values:
              values: ['NBA', 'NFL', 'NHL', 'CFB']

      - name: went_to_overtime
        tests:
          - not_null
          - accepted_values:
              values: [true, false]

      - name: number_of_overtimes
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10

      - name: ot_winner
        tests:
          - accepted_values:
              values: ['HOME', 'AWAY', null]

      - name: ot_duration_minutes
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 60

      - name: ot_intensity
        tests:
          - not_null
          - accepted_values:
              values: ['Low Scoring OT', 'Medium Scoring OT', 'High Scoring OT', 'Quick OT', 'Extended OT']

      # Custom tests for sport-specific validation
      - name: overtime_validation
        tests:
          - dbt_utils.expression_is_true:
              expression: "
                (sport_type = 'NBA' and ot_duration_minutes = number_of_overtimes * 5) or
                (sport_type in ('NFL', 'CFB') and ot_duration_minutes = number_of_overtimes * 15) or
                (sport_type = 'NHL' and ot_duration_minutes = number_of_overtimes * 20)"

      - name: scoring_validation
        tests:
          - dbt_utils.expression_is_true:
              expression: "went_to_overtime = (number_of_overtimes > 0)"
