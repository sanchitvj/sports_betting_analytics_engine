version: 2

models:
  - name: mart_nhl_leader_stats
    description: Analytics for NHL player leadership statistics
    tests:
      - unique:
          column_name: "game_id || '-' || player_name || '-' || leader_type"
      - not_null:
          column_name: game_id
    columns:
      - name: player_name
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: '^[A-Za-z\s\.-]+$'

      - name: leader_type
        tests:
          - not_null
          - accepted_values:
              values: ['GOALS', 'ASSISTS', 'POINTS']

      - name: stat_value
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10

      - name: avg_stat_value
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 5

      - name: season_high
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 10

      - name: games_as_leader
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 1
              max_value: 82

      # Custom tests for hockey-specific metrics
      - name: performance_validation
        tests:
          - dbt_utils.expression_is_true:
              expression: "
                (leader_type = 'GOALS' and stat_value <= 5) or
                (leader_type = 'ASSISTS' and stat_value <= 5) or
                (leader_type = 'POINTS' and stat_value <= 8)"

      - name: achievement_validation
        tests:
          - dbt_utils.expression_is_true:
              expression: "performance_milestone in ('Hat Trick', 'Brace', 'Four Point Night', 'Regular Performance')"
          - dbt_utils.expression_is_true:
              expression: "total_hat_tricks <= games_as_leader"
